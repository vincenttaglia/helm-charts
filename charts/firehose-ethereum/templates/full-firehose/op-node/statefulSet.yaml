{{- $values := $.Values.fullMode }}
{{- $componentName := "op-node" }}
{{- $componentLabel := include "firehose-ethereum.componentLabelFor" $componentName }}
{{- if and (eq .Values.mode "full") $values.components.opnode.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-firehose-{{ $componentName }}
  labels:
    {{- include "firehose-ethereum.labels" . | nindent 4 }}
    {{- $componentLabel | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "firehose-ethereum.selectorLabels" . | nindent 6 }}
      {{- $componentLabel | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "firehose-ethereum.selectorLabels" . | nindent 8 }}
        {{- $componentLabel | nindent 8 }}
    spec:
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      containers:
        - name: {{ $componentName }}
          image: {{ $values.components.opnode.image.repository }}:{{ $values.components.opnode.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - op-node
            - --network={{ $values.components.opnode.config.network }}
            - --l1={{ $values.components.opnode.config.l1 }}
            - --l1.beacon={{ $values.components.opnode.config.l1beacon }}
            - --l1.beacon-archiver={{ $values.components.opnode.config.l1beacon }}
            - --l1.beacon.fetch-all-sidecars=true
            - --l1.rpckind={{ $values.components.opnode.config.rpckind }}
            - --l1.trustrpc=true
            - --l2=http://{{ .Release.Name }}-firehose-reader-svc:8551
            - --l2.enginekind=geth
            - --l2.jwt-secret=/jwt/jwt.hex
            - --syncmode=execution-layer
            - --verifier.l1-confs=4
            - --log.color=true
            - --log.format=logfmt
            - --metrics.enabled=true
            - --metrics.port=7300
            - --rpc.addr=0.0.0.0
            - --rpc.port=9545
            - --p2p.bootnodes=enr:-J24QNz9lbrKbN4iSmmjtnr7SjUMk4zB7f1krHZcTZx-JRKZd0kA2gjufUROD6T3sOWDVDnFJRvqBBo62zuF-hYCohOGAYiOoEyEgmlkgnY0gmlwhAPniryHb3BzdGFja4OFQgCJc2VjcDI1NmsxoQKNVFlCxh_B-716tTs-h1vMzZkSs1FTu_OYTNjgufplG4N0Y3CCJAaDdWRwgiQG,enr:-J24QH-f1wt99sfpHy4c0QJM-NfmsIfmlLAMMcgZCUEgKG_BBYFc6FwYgaMJMQN5dsRBJApIok0jFn-9CS842lGpLmqGAYiOoDRAgmlkgnY0gmlwhLhIgb2Hb3BzdGFja4OFQgCJc2VjcDI1NmsxoQJ9FTIv8B9myn1MWaC_2lJ-sMoeCDkusCsk4BYHjjCq04N0Y3CCJAaDdWRwgiQG,enr:-J24QDXyyxvQYsd0yfsN0cRr1lZ1N11zGTplMNlW4xNEc7LkPXh0NAJ9iSOVdRO95GPYAIc6xmyoCCG6_0JxdL3a0zaGAYiOoAjFgmlkgnY0gmlwhAPckbGHb3BzdGFja4OFQgCJc2VjcDI1NmsxoQJwoS7tzwxqXSyFL7g0JM-KWVbgvjfB8JA__T7yY_cYboN0Y3CCJAaDdWRwgiQG,enr:-J24QHmGyBwUZXIcsGYMaUqGGSl4CFdx9Tozu-vQCn5bHIQbR7On7dZbU61vYvfrJr30t0iahSqhc64J46MnUO2JvQaGAYiOoCKKgmlkgnY0gmlwhAPnCzSHb3BzdGFja4OFQgCJc2VjcDI1NmsxoQINc4fSijfbNIiGhcgvwjsjxVFJHUstK9L1T8OTKUjgloN0Y3CCJAaDdWRwgiQG,enr:-J24QG3ypT4xSu0gjb5PABCmVxZqBjVw9ca7pvsI8jl4KATYAnxBmfkaIuEqy9sKvDHKuNCsy57WwK9wTt2aQgcaDDyGAYiOoGAXgmlkgnY0gmlwhDbGmZaHb3BzdGFja4OFQgCJc2VjcDI1NmsxoQIeAK_--tcLEiu7HvoUlbV52MspE0uCocsx1f_rYvRenIN0Y3CCJAaDdWRwgiQG
            - --p2p.listen.ip=0.0.0.0
            - --p2p.listen.tcp=9222
          ports:
            - name: http-op-node
              containerPort: 9545
              protocol: TCP
            - name: http-metrics
              containerPort: 7300
              protocol: TCP
            - name: p2p-tcp
              containerPort: 9222
              protocol: TCP
            - name: p2p-udp
              containerPort: 9222
              protocol: UDP
          volumeMounts:
            - name: jwt-secret
              mountPath: /jwt
              readOnly: true
      volumes:
        - name: jwt-secret
          secret:
            secretName: {{ .Release.Name }}-firehose-jwt

{{- end }}